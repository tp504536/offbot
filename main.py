import aiogram
import logging
import fakedraw

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.utils import executor
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import keyboard
from sql import Database
from config import *

logging.basicConfig(level=logging.INFO)

db = Database('base.db')
bot = Bot(token=TOKEN)
memory_storage = MemoryStorage()
dp = Dispatcher(bot, storage=memory_storage)


# –ö–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –ø–æ–Ω–∞–¥–∞—é—è—Ç—Å—è
class Settings(StatesGroup):
    qiwi = State()
    qiwi_balance = State()
    qiwi_transfer = State()
    qiwi_up = State()
    sber = State()
    sber_balance = State()
    sber_transfer = State()
    rai_trans = State()
    rai_balance = State()
    tin_trans = State()
    tin_balance = State()
    spam_text = State()

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if not db.users(message.from_user.id):
        db.add_user(message.from_user.id)
    await message.answer('–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤,'
                         ' —á–µ–∫–æ–≤ –ø–æ –æ–ø–µ—Ä–∞—Ü–∏—è–º –∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –ø–æ–∫—É–ø–æ–∫.', reply_markup=keyboard.start)


@dp.message_handler(commands=['admin'])
async def admin(message:types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!',reply_markup=keyboard.admin_menu)

@dp.message_handler(content_types='text')
async def main(message: types.Message):
    if message.text == 'Qiwiü•ù':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=keyboard.qiw_menu)
    elif message.text == '–ë–∞–ª–∞–Ω—Å Qiwiü•ù':
        await message.answer_photo(fakedraw.fake_qiwi_balance(message), caption="""–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
1 - –±–∞–ª–∞–Ω—Å
2 - –≤—Ä–µ–º—è

–ü—Ä–∏–º–µ—Ä:
500
17:33
""")
        await Settings.qiwi_balance.set()
    elif message.text == '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –¥—Ä—É–≥–æ–π –Ω–∞ –∫–∞—Ä—Ç—Éü•ù':
        await message.answer_photo(fakedraw.fake_qiwi_transfer(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:

        1 - —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
        2 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        3 - –¥–∞—Ç—É 
        4 - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã

        –ü—Ä–∏–º–µ—Ä:
        53000
        08.03.2021 –≤ 21:30
        21:30
        4513
        """)
        await Settings.qiwi_transfer.set()
    elif message.text == '–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç Qiwiü•ù':
        await message.answer_photo(fakedraw.fake_qiwi_up(message),caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –°—É–º–º–∞
        2 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è  
        3 - –í—Ä–µ–º—è —Ç–µ–ª–µ—Ñ–æ–Ω
        4 - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        
        –ü—Ä–∏–º–µ—Ä:
        
        1000
        08.03.2021 –≤ 21:30
        17:30
        +79045580813
        """)
        await Settings.qiwi_up.set()
    elif message.text == 'SberüçÄ':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=keyboard.sber_menu)
    elif message.text == '–ë–∞–ª–∞–Ω—Å —Å–±–µ—Ä–±–∞–Ω–∫üçÄ':
        await message.answer_photo(fakedraw.fake_sber_balance(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –°—É–º–º–∞
        2 - –∏–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã
        3 - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã
        4 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        5 - –ó–∞—Ä—è–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        
        –ü—Ä–∏–º–µ—Ä:
        
        1000
        –í–ª–∞–¥–∏–º–∏—Ä
        4577
        21:30
        50
        """)
        await Settings.sber_balance.set()
    elif message.text == '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å–±–µ—Ä–±–∞–Ω–∫üçÄ':
        await message.answer_photo(fakedraw.fake_sber_transfer(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
        2 - –∏–º—è –∫–æ–º—É –ø–µ—Ä–µ–≤–æ–¥
        3 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        4 - –ó–∞—Ä—è–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

        –ü—Ä–∏–º–µ—Ä:
        1000
        –í–ª–∞–¥–∏–º–∏—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á –ü
        21:30
        20
        """)
        await Settings.sber_transfer.set()
    elif message.text == 'Raifaisenbank‚öîÔ∏è':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=keyboard.rai_menu)
    elif message.text == '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –†–∞–π—Ñ–∞–π–∑–∏–Ω–≥‚öîÔ∏è':
        await message.answer_photo(fakedraw.fake_rai_transfer(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
        2 - –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞
        3 - –ò–º—è –∫–æ–º—É –ø–µ—Ä–µ–≤–æ–¥
        4 - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        5 - –ë–∞–Ω–∫
        6 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

        –ü—Ä–∏–º–µ—Ä:
        1000
        0675867
        –í–ª–∞–¥–∏–º–∏—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á –ü
        +79125560613
        –°–±–µ—Ä–±–∞–Ω–∫
        21:30
        """)
        await Settings.rai_trans.set()
    elif message.text == '–ë–∞–ª–∞–Ω—Å –†–∞–π—Ñ–∞–π–∑–∏–Ω–≥‚öîÔ∏è':
        await message.answer_photo(fakedraw.fake_rai_balance(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –ë–∞–ª–∞–Ω—Å
        2 - –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞
        3 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

        –ü—Ä–∏–º–µ—Ä:
        1000
        0675867
        21:30
        """)
        await Settings.rai_balance.set()
    elif message.text == 'TinkoffüíÇ‚Äç‚ôÄÔ∏è':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=keyboard.tink_menu)
    elif message.text == '–ë–∞–ª–∞–Ω—Å –¢–∏–Ω—å–∫–æ—Ñ—ÑüíÇ‚Äç‚ôÄ':
        await message.answer_photo(fakedraw.fake_tin_balance(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –ë–∞–ª–∞–Ω—Å
        2 - –ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã
        3 - –ú–µ—Å—è—Ü
        4 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

        –ü—Ä–∏–º–µ—Ä:
        1000
        –î–º–∏—Ç—Ä–∏–π
        –ù–æ—è–±—Ä–µ
        21:30
        """)
        await Settings.tin_balance.set()
    elif message.text == '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –¢–∏–Ω—å–∫–æ—Ñ—ÑüíÇ‚Äç‚ôÄ':
        await message.answer_photo(fakedraw.fake_tin_transfer(message), caption="""
        –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:
        
        1 - –ë–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ã
        2 - –°—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        3 - –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        4 - –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        5 - –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

        –ü—Ä–∏–º–µ—Ä:
        15600
        25566
        –í–ª–∞–¥–∏–º–∏—Ä –ü
        +7 (912) 445-05-32
        21:30
        """)
        await Settings.tin_trans.set()
    elif message.text == '–ù–∞–∑–∞–¥üîô':
        await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=keyboard.start)
    elif message.text == '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å–∫–æ–µ –º–µ–Ω—é':
        await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=keyboard.start)
    elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        count = db.coun_user()
        await message.answer('–í –±–æ—Ç–∞ –∑–∞—Ö–æ–¥–∏–ª–æ:\n' + str(count))
    elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞':
        await message.answer("–ñ–¥—É —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        await Settings.spam_text.set()
    elif message.text == '–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã‚ùóÔ∏è':
        await message.answer('ü•§ –°–∞–º–∞—è –±–æ–ª—å—à–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –≤ Telegaram!\n\nhttps://t.me/Kinoozal_bot\n\n'
                             '–ë–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–µ–¥–∏–∞ —Å instagram\n\nhttps://t.me/Instagramdownloader495_bot\n\n'
                             '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–æ–≤ @vladimirr223 ')
    else:
        await message.answer('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É')
@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.qiwi_balance)
async def qiwi(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_qiwi_balance(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!',reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.qiwi_up)
async def qiwi_up(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_qiwi_up(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!',reply_markup=keyboard.start)

@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.qiwi_transfer)
async def qiwi_transfer(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_qiwi_transfer(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!',reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.sber_balance)
async def sber(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_sber_balance(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!',reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.sber_transfer)
async def sber_trans(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_sber_transfer(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!', reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.rai_balance)
async def rai_balance(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_rai_balance(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!', reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.rai_trans)
async def rai_trans(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_rai_transfer(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!', reply_markup=keyboard.start)

@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.tin_trans)
async def tin_trans(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_tin_transfer(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!', reply_markup=keyboard.start)


@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Settings.tin_balance)
async def tin_trans(message: types.Message, state: FSMContext):
    try:
        await message.answer_photo(fakedraw.fake_tin_balance(message), reply_markup=keyboard.start)
        await state.finish()
    except:
        await state.finish()
        await message.answer('–£–ø—Å, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫!', reply_markup=keyboard.start)


@dp.message_handler(content_types='text', state=Settings.spam_text.state)
async def login(message: types.Message, state: FSMContext):
    global spam
    async with state.proxy() as spam:
        spam['text'] = message.text
        await state.finish()
        await message.answer('–í–∞—à —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:\n\n' + spam['text'], reply_markup=keyboard.spam_inline)


@dp.callback_query_handler(text='ok')
async def no_date(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    all_users = db.all_user()
    for i in all_users:
        print(i)
        try:
            await bot.send_message(i,spam['text'])
        except:
            await call.message.answer('–£–ø—Å! –≤–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')

@dp.callback_query_handler(text='no')
async def no_date(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    await call.message.answer('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É')
if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)
